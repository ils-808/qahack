{"uid":"26488a9f2fe539d9","name":"test_create_user_nick_used[api-3]","fullName":"tests.endpoints.test_users#test_create_user_nick_used","historyId":"323c4dc35ac72476fddb254216e4925d","time":{"start":1733084985488,"stop":1733084986366,"duration":878},"status":"failed","statusMessage":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f7e012f8c50>\nx_task_value = 'api-3'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"User creation\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-3\"])\n    def test_create_user_nick_used(api_client, x_task_value):\n        dto = UserBase(email=f.email(), nickname=f.user_name(), password=f.password(), name=f.name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert UserBase(**response.json()).nickname, f\"Empty nickname\"\nE       AssertionError: Empty nickname\nE       assert ''\nE        +  where '' = UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\nE        +    where UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...})\nE        +      where {'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...} = json()\nE        +        where json = <Response [200]>.json\n\ntests/endpoints/test_users.py:17: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733084982873,"stop":1733084982874,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733084982874,"stop":1733084982874,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733084982875,"stop":1733084982875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test","time":{"start":1733084982875,"stop":1733084985487,"duration":2612},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1733084982875,"stop":1733084982875,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f7e012f8c50>\nx_task_value = 'api-3'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"User creation\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-3\"])\n    def test_create_user_nick_used(api_client, x_task_value):\n        dto = UserBase(email=f.email(), nickname=f.user_name(), password=f.password(), name=f.name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert UserBase(**response.json()).nickname, f\"Empty nickname\"\nE       AssertionError: Empty nickname\nE       assert ''\nE        +  where '' = UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\nE        +    where UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...})\nE        +      where {'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...} = json()\nE        +        where json = <Response [200]>.json\n\ntests/endpoints/test_users.py:17: AssertionError","steps":[],"attachments":[{"uid":"e410f23d9898e39b","name":"log","source":"e410f23d9898e39b.txt","type":"text/plain","size":406},{"uid":"70e8a01d0bf4befc","name":"stderr","source":"70e8a01d0bf4befc.txt","type":"text/plain","size":402}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test::0","time":{"start":1733084999241,"stop":1733084999241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"story","value":"User creation"},{"name":"feature","value":"User API"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az881-610"},{"name":"thread","value":"2818-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"6421c4ad4ace7fc2","reportUrl":"https://ils-808.github.io/qahack/61//#testresult/6421c4ad4ace7fc2","status":"failed","statusDetails":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='256995fa-7190-44fd-bc0c-bb16b5c924a1', nickname='', name='Laura Medina', email='millerjeremy@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='256995fa-7190-44fd-bc0c-bb16b5c924a1', nickname='', name='Laura Medina', email='millerjeremy@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'millerjeremy@example.org', 'name': 'Laura Medina', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'millerjeremy@example.org', 'name': 'Laura Medina', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","time":{"start":1733084764349,"stop":1733084765149,"duration":800}},{"uid":"5fb53d55b20fbdc4","reportUrl":"https://ils-808.github.io/qahack/60//#testresult/5fb53d55b20fbdc4","status":"passed","time":{"start":1733084482382,"stop":1733084483551,"duration":1169}}]},"tags":[]},"source":"26488a9f2fe539d9.json","parameterValues":["'api-3'"]}