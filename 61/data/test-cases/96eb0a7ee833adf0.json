{"uid":"96eb0a7ee833adf0","name":"test_get_single_user[api-23]","fullName":"tests.endpoints.test_users#test_get_single_user","historyId":"6e18ee0cc37d55078c7657684fb84445","time":{"start":1733084771190,"stop":1733084772631,"duration":1441},"status":"failed","statusMessage":"AssertionError: User ID mismatch: 256995fa-7190-44fd-bc0c-bb16b5c924a1\nassert '256995fa-719...-bb16b5c924a1' == '301508ba-8ed...-5f2f17dae743'\n  \n  - 301508ba-8ede-4eb6-8be0-5f2f17dae743\n  + 256995fa-7190-44fd-bc0c-bb16b5c924a1","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7fcb5e1f0b60>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: 256995fa-7190-44fd-bc0c-bb16b5c924a1\nE       assert '256995fa-719...-bb16b5c924a1' == '301508ba-8ed...-5f2f17dae743'\nE         \nE         - 301508ba-8ede-4eb6-8be0-5f2f17dae743\nE         + 256995fa-7190-44fd-bc0c-bb16b5c924a1\n\ntests/endpoints/test_users.py:104: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733084762033,"stop":1733084762035,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1733084762035,"stop":1733084762035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733084762035,"stop":1733084762035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733084762035,"stop":1733084762035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test","time":{"start":1733084762035,"stop":1733084764348,"duration":2313},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: User ID mismatch: 256995fa-7190-44fd-bc0c-bb16b5c924a1\nassert '256995fa-719...-bb16b5c924a1' == '301508ba-8ed...-5f2f17dae743'\n  \n  - 301508ba-8ede-4eb6-8be0-5f2f17dae743\n  + 256995fa-7190-44fd-bc0c-bb16b5c924a1","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7fcb5e1f0b60>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: 256995fa-7190-44fd-bc0c-bb16b5c924a1\nE       assert '256995fa-719...-bb16b5c924a1' == '301508ba-8ed...-5f2f17dae743'\nE         \nE         - 301508ba-8ede-4eb6-8be0-5f2f17dae743\nE         + 256995fa-7190-44fd-bc0c-bb16b5c924a1\n\ntests/endpoints/test_users.py:104: AssertionError","steps":[],"attachments":[{"uid":"4fbf82e42dea3050","name":"log","source":"4fbf82e42dea3050.txt","type":"text/plain","size":1985},{"uid":"18cb7aa13adb85c3","name":"stderr","source":"18cb7aa13adb85c3.txt","type":"text/plain","size":1971}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test::0","time":{"start":1733084778074,"stop":1733084778074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Get user"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az1780-276"},{"name":"thread","value":"2824-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-23'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"cbffb7f223b30038","reportUrl":"https://ils-808.github.io/qahack/60//#testresult/cbffb7f223b30038","status":"passed","time":{"start":1733084492213,"stop":1733084493685,"duration":1472}}]},"tags":[]},"source":"96eb0a7ee833adf0.json","parameterValues":["'api-23'"]}