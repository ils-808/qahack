{"uid":"f2a595ac1a1ce92","name":"test_add_duplicate_item_wishlist[api-25]","fullName":"tests.endpoints.test_wishlist#test_add_duplicate_item_wishlist","historyId":"cc7c1edf0ae7802c410b0c58077ceeac","time":{"start":1733069633314,"stop":1733069636130,"duration":2816},"status":"failed","statusMessage":"AssertionError: Duplicate items in wishlist\nassert 2 == 1\n +  where 2 = len(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])\n +  and   1 = len({'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'})\n +    where {'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'} = set(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f8faf185610>\nx_task_value = 'api-25'\n\n    @allure.feature(\"Wishlist API\")\n    @allure.story(\"Duplicate item in wishlist\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-25\"])\n    def test_add_duplicate_item_wishlist(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n    \n        wishlist_response = api_client.get_whishlist(user_uuid, x_task_value)\n        wishlist_dto = GameWishlist(**wishlist_response.json())\n        item_to_add = wishlist_dto.items[0].uuid\n    \n        response = api_client.add_item_whishlist(user_uuid, item_to_add, x_task_value)\n        updated_wishlist_dto = GameWishlist(**response.json())\n    \n        all_uuids = [item.uuid for item in updated_wishlist_dto.items]\n    \n        # Проверяем, что длина списка UUID равна длине множества UUID\n>       assert len(all_uuids) == len(set(all_uuids)), \"Duplicate items in wishlist\"\nE       AssertionError: Duplicate items in wishlist\nE       assert 2 == 1\nE        +  where 2 = len(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])\nE        +  and   1 = len({'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'})\nE        +    where {'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'} = set(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])\n\ntests/endpoints/test_wishlist.py:67: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733069622283,"stop":1733069622284,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733069622284,"stop":1733069622284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733069622285,"stop":1733069622285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733069622285,"stop":1733069622285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733069622285,"stop":1733069624720,"duration":2435},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Duplicate items in wishlist\nassert 2 == 1\n +  where 2 = len(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])\n +  and   1 = len({'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'})\n +    where {'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'} = set(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f8faf185610>\nx_task_value = 'api-25'\n\n    @allure.feature(\"Wishlist API\")\n    @allure.story(\"Duplicate item in wishlist\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-25\"])\n    def test_add_duplicate_item_wishlist(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n    \n        wishlist_response = api_client.get_whishlist(user_uuid, x_task_value)\n        wishlist_dto = GameWishlist(**wishlist_response.json())\n        item_to_add = wishlist_dto.items[0].uuid\n    \n        response = api_client.add_item_whishlist(user_uuid, item_to_add, x_task_value)\n        updated_wishlist_dto = GameWishlist(**response.json())\n    \n        all_uuids = [item.uuid for item in updated_wishlist_dto.items]\n    \n        # Проверяем, что длина списка UUID равна длине множества UUID\n>       assert len(all_uuids) == len(set(all_uuids)), \"Duplicate items in wishlist\"\nE       AssertionError: Duplicate items in wishlist\nE       assert 2 == 1\nE        +  where 2 = len(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])\nE        +  and   1 = len({'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'})\nE        +    where {'1990ecdd-4d3d-4de2-91b9-d45d794c82bc'} = set(['1990ecdd-4d3d-4de2-91b9-d45d794c82bc', '1990ecdd-4d3d-4de2-91b9-d45d794c82bc'])\n\ntests/endpoints/test_wishlist.py:67: AssertionError","steps":[],"attachments":[{"uid":"706fd1ac649c92fc","name":"log","source":"706fd1ac649c92fc.txt","type":"text/plain","size":2730},{"uid":"afcbf108291338e0","name":"stderr","source":"afcbf108291338e0.txt","type":"text/plain","size":2714}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733069637612,"stop":1733069637612,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Wishlist API"},{"name":"story","value":"Duplicate item in wishlist"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_wishlist"},{"name":"host","value":"fv-az1393-586"},{"name":"thread","value":"2358-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_wishlist"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-25'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f2a595ac1a1ce92.json","parameterValues":["'api-25'"]}