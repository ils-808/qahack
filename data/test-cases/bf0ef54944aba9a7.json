{"uid":"bf0ef54944aba9a7","name":"test_get_single_user[api-23]","fullName":"tests.endpoints.test_users#test_get_single_user","historyId":"6e18ee0cc37d55078c7657684fb84445","time":{"start":1733069633587,"stop":1733069635875,"duration":2288},"status":"failed","statusMessage":"AssertionError: User ID mismatch: 3ffcf525-059c-4ace-8ae7-29fa22641e8b\nassert '3ffcf525-059...-29fa22641e8b' == 'fb87ff4f-839...-c87d8a06655e'\n  \n  - fb87ff4f-839b-425c-bfa4-c87d8a06655e\n  + 3ffcf525-059c-4ace-8ae7-29fa22641e8b","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f071ecf4a10>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: 3ffcf525-059c-4ace-8ae7-29fa22641e8b\nE       assert '3ffcf525-059...-29fa22641e8b' == 'fb87ff4f-839...-c87d8a06655e'\nE         \nE         - fb87ff4f-839b-425c-bfa4-c87d8a06655e\nE         + 3ffcf525-059c-4ace-8ae7-29fa22641e8b\n\ntests/endpoints/test_users.py:104: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733069622284,"stop":1733069622285,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733069622285,"stop":1733069622285,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733069622286,"stop":1733069622286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733069622286,"stop":1733069622286,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733069622286,"stop":1733069624745,"duration":2459},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: User ID mismatch: 3ffcf525-059c-4ace-8ae7-29fa22641e8b\nassert '3ffcf525-059...-29fa22641e8b' == 'fb87ff4f-839...-c87d8a06655e'\n  \n  - fb87ff4f-839b-425c-bfa4-c87d8a06655e\n  + 3ffcf525-059c-4ace-8ae7-29fa22641e8b","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f071ecf4a10>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: 3ffcf525-059c-4ace-8ae7-29fa22641e8b\nE       assert '3ffcf525-059...-29fa22641e8b' == 'fb87ff4f-839...-c87d8a06655e'\nE         \nE         - fb87ff4f-839b-425c-bfa4-c87d8a06655e\nE         + 3ffcf525-059c-4ace-8ae7-29fa22641e8b\n\ntests/endpoints/test_users.py:104: AssertionError","steps":[],"attachments":[{"uid":"149368fb1c3452cd","name":"log","source":"149368fb1c3452cd.txt","type":"text/plain","size":1979},{"uid":"7e5ca15cc59d1440","name":"stderr","source":"7e5ca15cc59d1440.txt","type":"text/plain","size":1969}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733069643035,"stop":1733069643035,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Get user"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az1393-586"},{"name":"thread","value":"2349-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-23'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"bf0ef54944aba9a7.json","parameterValues":["'api-23'"]}