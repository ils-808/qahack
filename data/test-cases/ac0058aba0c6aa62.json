{"uid":"ac0058aba0c6aa62","name":"test_add_item_wishlist[api-5]","fullName":"tests.endpoints.test_wishlist#test_add_item_wishlist","historyId":"4ba19191ca784e6f8f83731e9cdc7fe0","time":{"start":1733074607084,"stop":1733074610040,"duration":2956},"status":"failed","statusMessage":"AssertionError: Add item to wishlist failed with code: 422\nassert 422 == 200\n +  where 422 = <Response [422]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7fa5c2ead850>\nx_task_value = 'api-5'\n\n    @allure.feature(\"Wishlist API\")\n    @allure.story(\"Add item to wishlist\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-5\"])\n    def test_add_item_wishlist(api_client, x_task_value):\n        games = api_client.get_games(x_task_value)\n        games_dto = GamesResponse(**games.json())\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n        gamed_uuid = games_dto.games[0].uuid\n    \n        response = api_client.add_item_whishlist(user_uuid, gamed_uuid, x_task_value)\n    \n>       assert response.status_code == 200, f\"Add item to wishlist failed with code: {response.status_code}\"\nE       AssertionError: Add item to wishlist failed with code: 422\nE       assert 422 == 200\nE        +  where 422 = <Response [422]>.status_code\n\ntests/endpoints/test_wishlist.py:20: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733074604859,"stop":1733074604860,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733074604861,"stop":1733074604861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733074604861,"stop":1733074604861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733074604861,"stop":1733074607084,"duration":2223},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733074604861,"stop":1733074604861,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Add item to wishlist failed with code: 422\nassert 422 == 200\n +  where 422 = <Response [422]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7fa5c2ead850>\nx_task_value = 'api-5'\n\n    @allure.feature(\"Wishlist API\")\n    @allure.story(\"Add item to wishlist\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-5\"])\n    def test_add_item_wishlist(api_client, x_task_value):\n        games = api_client.get_games(x_task_value)\n        games_dto = GamesResponse(**games.json())\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n        gamed_uuid = games_dto.games[0].uuid\n    \n        response = api_client.add_item_whishlist(user_uuid, gamed_uuid, x_task_value)\n    \n>       assert response.status_code == 200, f\"Add item to wishlist failed with code: {response.status_code}\"\nE       AssertionError: Add item to wishlist failed with code: 422\nE       assert 422 == 200\nE        +  where 422 = <Response [422]>.status_code\n\ntests/endpoints/test_wishlist.py:20: AssertionError","steps":[],"attachments":[{"uid":"97e2db3bba8355c9","name":"log","source":"97e2db3bba8355c9.txt","type":"text/plain","size":3988},{"uid":"ff6a4a11674402d0","name":"stderr","source":"ff6a4a11674402d0.txt","type":"text/plain","size":3971}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733074620433,"stop":1733074620433,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Add item to wishlist"},{"name":"feature","value":"Wishlist API"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_wishlist"},{"name":"host","value":"fv-az891-670"},{"name":"thread","value":"2335-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_wishlist"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-5'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ac0058aba0c6aa62.json","parameterValues":["'api-5'"]}