{"uid":"f5a12b6cee65836d","name":"test_user_create[api-22]","fullName":"tests.endpoints.test_users#test_user_create","historyId":"399795371ebac6e8cb7c3c805e670145","time":{"start":1733083868876,"stop":1733083869395,"duration":519},"status":"failed","statusMessage":"AssertionError: Create user failed with code: 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f30eb7e8f50>\nx_task_value = 'api-22'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Create user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-22\"])\n    def test_user_create(api_client, x_task_value):\n        dto = UserBase(email=f.email(), password=f.password(), name=f.name(), nickname=f.user_name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert response.status_code == 200, f\"Create user failed with code: {response.status_code}\"\nE       AssertionError: Create user failed with code: 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/endpoints/test_users.py:90: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733083858820,"stop":1733083858822,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733083858822,"stop":1733083858823,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733083858823,"stop":1733083858823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733083858823,"stop":1733083861888,"duration":3065},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733083858823,"stop":1733083858823,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Create user failed with code: 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f30eb7e8f50>\nx_task_value = 'api-22'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Create user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-22\"])\n    def test_user_create(api_client, x_task_value):\n        dto = UserBase(email=f.email(), password=f.password(), name=f.name(), nickname=f.user_name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert response.status_code == 200, f\"Create user failed with code: {response.status_code}\"\nE       AssertionError: Create user failed with code: 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/endpoints/test_users.py:90: AssertionError","steps":[],"attachments":[{"uid":"ebe4a0c024912e69","name":"log","source":"ebe4a0c024912e69.txt","type":"text/plain","size":319},{"uid":"9728afb151637bf2","name":"stderr","source":"9728afb151637bf2.txt","type":"text/plain","size":315}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733083876854,"stop":1733083876854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Create user"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az840-119"},{"name":"thread","value":"2345-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-22'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f5a12b6cee65836d.json","parameterValues":["'api-22'"]}