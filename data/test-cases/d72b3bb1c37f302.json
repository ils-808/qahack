{"uid":"d72b3bb1c37f302","name":"test_create_user_nick_used[api-3]","fullName":"tests.endpoints.test_users#test_create_user_nick_used","historyId":"323c4dc35ac72476fddb254216e4925d","time":{"start":1733072743306,"stop":1733072746439,"duration":3133},"status":"failed","statusMessage":"AssertionError: Empty nickname\nassert None\n +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\n +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\n +      where {'code': 500, 'message': 'Internal server error'} = json()\n +        where json = <Response [500]>.json","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f8575ff0c50>\nx_task_value = 'api-3'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"User creation\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-3\"])\n    def test_create_user_nick_used(api_client, x_task_value):\n        dto = UserBase(email=f.email(), nickname=f.user_name(), password=f.password(), name=f.name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert UserBase(**response.json()).nickname, f\"Empty nickname\"\nE       AssertionError: Empty nickname\nE       assert None\nE        +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\nE        +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\nE        +      where {'code': 500, 'message': 'Internal server error'} = json()\nE        +        where json = <Response [500]>.json\n\ntests/endpoints/test_users.py:17: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733072740390,"stop":1733072740391,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733072740391,"stop":1733072740392,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733072740392,"stop":1733072740392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733072740392,"stop":1733072743305,"duration":2913},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733072740392,"stop":1733072740392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Empty nickname\nassert None\n +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\n +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\n +      where {'code': 500, 'message': 'Internal server error'} = json()\n +        where json = <Response [500]>.json","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f8575ff0c50>\nx_task_value = 'api-3'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"User creation\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-3\"])\n    def test_create_user_nick_used(api_client, x_task_value):\n        dto = UserBase(email=f.email(), nickname=f.user_name(), password=f.password(), name=f.name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert UserBase(**response.json()).nickname, f\"Empty nickname\"\nE       AssertionError: Empty nickname\nE       assert None\nE        +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\nE        +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\nE        +      where {'code': 500, 'message': 'Internal server error'} = json()\nE        +        where json = <Response [500]>.json\n\ntests/endpoints/test_users.py:17: AssertionError","steps":[],"attachments":[{"uid":"990362385cdb794f","name":"log","source":"990362385cdb794f.txt","type":"text/plain","size":316},{"uid":"a140546a44abec36","name":"stderr","source":"a140546a44abec36.txt","type":"text/plain","size":314}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733072760518,"stop":1733072760518,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"User creation"},{"name":"feature","value":"User API"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az654-267"},{"name":"thread","value":"2332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d72b3bb1c37f302.json","parameterValues":["'api-3'"]}