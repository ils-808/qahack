{"uid":"7d065bff7c6cd411","name":"test_user_create[api-22]","fullName":"tests.endpoints.test_users#test_user_create","historyId":"399795371ebac6e8cb7c3c805e670145","time":{"start":1733072346577,"stop":1733072347075,"duration":498},"status":"failed","statusMessage":"AssertionError: Create user failed with code: 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f30b89e4b90>\nx_task_value = 'api-22'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Create user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-22\"])\n    def test_user_create(api_client, x_task_value):\n        dto = UserBase(email=f.email(), password=f.password(), name=f.name(), nickname=f.user_name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert response.status_code == 200, f\"Create user failed with code: {response.status_code}\"\nE       AssertionError: Create user failed with code: 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/endpoints/test_users.py:90: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733072330982,"stop":1733072330984,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733072330984,"stop":1733072330984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733072330984,"stop":1733072330984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733072330984,"stop":1733072330984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733072330984,"stop":1733072333897,"duration":2913},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Create user failed with code: 500\nassert 500 == 200\n +  where 500 = <Response [500]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f30b89e4b90>\nx_task_value = 'api-22'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Create user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-22\"])\n    def test_user_create(api_client, x_task_value):\n        dto = UserBase(email=f.email(), password=f.password(), name=f.name(), nickname=f.user_name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert response.status_code == 200, f\"Create user failed with code: {response.status_code}\"\nE       AssertionError: Create user failed with code: 500\nE       assert 500 == 200\nE        +  where 500 = <Response [500]>.status_code\n\ntests/endpoints/test_users.py:90: AssertionError","steps":[],"attachments":[{"uid":"e17622a5e2438a44","name":"log","source":"e17622a5e2438a44.txt","type":"text/plain","size":317},{"uid":"ff0d57f5567b3218","name":"stderr","source":"ff0d57f5567b3218.txt","type":"text/plain","size":315}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733072350529,"stop":1733072350529,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Create user"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az883-496"},{"name":"thread","value":"2331-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-22'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7d065bff7c6cd411.json","parameterValues":["'api-22'"]}