{"uid":"ebcad92bcef65304","name":"test_get_cart[api-12]","fullName":"tests.endpoints.test_cart#test_get_cart","historyId":"1bab4281fd9bee540784c3951486c1a4","time":{"start":1733074807699,"stop":1733074812892,"duration":5193},"status":"failed","statusMessage":"AssertionError: Amount in array doens't equal total amount: 0\nassert 5999 == 0\n +  where 0 = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=0, user_uuid='96c4e9b1-ac61-4b33-a09f-6ffc13835518').total_price","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7ff6991dd1c0>\nx_task_value = 'api-12'\n\n    @allure.feature(\"Cart API\")\n    @allure.story(\"Get cart\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-12\"])\n    def test_get_cart(api_client, x_task_value):\n        games = api_client.get_games(x_task_value)\n        games_dto = GamesResponse(**games.json())\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n        gamed_uuid = games_dto.games[0].uuid\n    \n        new_cart_item = Cart(item_uuid=gamed_uuid, quantity=1)\n    \n        api_client.add_to_cart(user_uuid, new_cart_item, x_task_value)\n    \n        response = api_client.get_cart(user_uuid, x_task_value)\n        order_dto = CartResponse(**response.json())\n        total_amount_array = sum(item.total_price for item in order_dto.items)\n>       assert total_amount_array == order_dto.total_price, f\"Amount in array doens't equal total amount: {order_dto.total_price}\"\nE       AssertionError: Amount in array doens't equal total amount: 0\nE       assert 5999 == 0\nE        +  where 0 = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=0, user_uuid='96c4e9b1-ac61-4b33-a09f-6ffc13835518').total_price\n\ntests/endpoints/test_cart.py:25: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733074804982,"stop":1733074804985,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733074804985,"stop":1733074807697,"duration":2712},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733074804985,"stop":1733074804985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733074804985,"stop":1733074804985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733074804985,"stop":1733074804985,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Amount in array doens't equal total amount: 0\nassert 5999 == 0\n +  where 0 = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=0, user_uuid='96c4e9b1-ac61-4b33-a09f-6ffc13835518').total_price","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7ff6991dd1c0>\nx_task_value = 'api-12'\n\n    @allure.feature(\"Cart API\")\n    @allure.story(\"Get cart\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-12\"])\n    def test_get_cart(api_client, x_task_value):\n        games = api_client.get_games(x_task_value)\n        games_dto = GamesResponse(**games.json())\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n        gamed_uuid = games_dto.games[0].uuid\n    \n        new_cart_item = Cart(item_uuid=gamed_uuid, quantity=1)\n    \n        api_client.add_to_cart(user_uuid, new_cart_item, x_task_value)\n    \n        response = api_client.get_cart(user_uuid, x_task_value)\n        order_dto = CartResponse(**response.json())\n        total_amount_array = sum(item.total_price for item in order_dto.items)\n>       assert total_amount_array == order_dto.total_price, f\"Amount in array doens't equal total amount: {order_dto.total_price}\"\nE       AssertionError: Amount in array doens't equal total amount: 0\nE       assert 5999 == 0\nE        +  where 0 = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=0, user_uuid='96c4e9b1-ac61-4b33-a09f-6ffc13835518').total_price\n\ntests/endpoints/test_cart.py:25: AssertionError","steps":[],"attachments":[{"uid":"ca161e22e50d8371","name":"log","source":"ca161e22e50d8371.txt","type":"text/plain","size":4338},{"uid":"1f6afeda9065a250","name":"stderr","source":"1f6afeda9065a250.txt","type":"text/plain","size":4318}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733074826537,"stop":1733074826537,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Get cart"},{"name":"feature","value":"Cart API"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_cart"},{"name":"host","value":"fv-az1205-27"},{"name":"thread","value":"2397-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-12'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ebcad92bcef65304.json","parameterValues":["'api-12'"]}