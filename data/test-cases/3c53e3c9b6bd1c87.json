{"uid":"3c53e3c9b6bd1c87","name":"test_get_single_user[api-23]","fullName":"tests.endpoints.test_users#test_get_single_user","historyId":"6e18ee0cc37d55078c7657684fb84445","time":{"start":1733075227993,"stop":1733075229561,"duration":1568},"status":"failed","statusMessage":"AssertionError: User ID mismatch: b202fe3f-af37-42ba-aafa-bf78cb2f2be0\nassert 'b202fe3f-af3...-bf78cb2f2be0' == 'eb08c5ed-b36...-b1b20de47160'\n  \n  - eb08c5ed-b36c-4b59-bc15-b1b20de47160\n  + b202fe3f-af37-42ba-aafa-bf78cb2f2be0","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f21065f4d40>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: b202fe3f-af37-42ba-aafa-bf78cb2f2be0\nE       assert 'b202fe3f-af3...-bf78cb2f2be0' == 'eb08c5ed-b36...-b1b20de47160'\nE         \nE         - eb08c5ed-b36c-4b59-bc15-b1b20de47160\nE         + b202fe3f-af37-42ba-aafa-bf78cb2f2be0\n\ntests/endpoints/test_users.py:104: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733075217549,"stop":1733075217551,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733075217551,"stop":1733075217551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733075217551,"stop":1733075219111,"duration":1560},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733075217551,"stop":1733075217551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733075217551,"stop":1733075217551,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: User ID mismatch: b202fe3f-af37-42ba-aafa-bf78cb2f2be0\nassert 'b202fe3f-af3...-bf78cb2f2be0' == 'eb08c5ed-b36...-b1b20de47160'\n  \n  - eb08c5ed-b36c-4b59-bc15-b1b20de47160\n  + b202fe3f-af37-42ba-aafa-bf78cb2f2be0","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f21065f4d40>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: b202fe3f-af37-42ba-aafa-bf78cb2f2be0\nE       assert 'b202fe3f-af3...-bf78cb2f2be0' == 'eb08c5ed-b36...-b1b20de47160'\nE         \nE         - eb08c5ed-b36c-4b59-bc15-b1b20de47160\nE         + b202fe3f-af37-42ba-aafa-bf78cb2f2be0\n\ntests/endpoints/test_users.py:104: AssertionError","steps":[],"attachments":[{"uid":"f13214675634bc2b","name":"log","source":"f13214675634bc2b.txt","type":"text/plain","size":1996},{"uid":"f6c4ba78f6c367a2","name":"stderr","source":"f6c4ba78f6c367a2.txt","type":"text/plain","size":1986}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733075236346,"stop":1733075236346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Get user"},{"name":"feature","value":"User API"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az529-122"},{"name":"thread","value":"2351-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-23'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"3c53e3c9b6bd1c87.json","parameterValues":["'api-23'"]}