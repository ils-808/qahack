{"uid":"ea798fcd96e77bd9","name":"test_get_single_user[api-23]","fullName":"tests.endpoints.test_users#test_get_single_user","historyId":"6e18ee0cc37d55078c7657684fb84445","time":{"start":1733073181001,"stop":1733073182645,"duration":1644},"status":"failed","statusMessage":"AssertionError: User ID mismatch: 977cc958-caec-43e7-aa06-0e35d08a7600\nassert '977cc958-cae...-0e35d08a7600' == '113d3041-0cd...-22cb857db875'\n  \n  - 113d3041-0cd5-48ec-b046-22cb857db875\n  + 977cc958-caec-43e7-aa06-0e35d08a7600","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f8fe18ecc20>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: 977cc958-caec-43e7-aa06-0e35d08a7600\nE       assert '977cc958-cae...-0e35d08a7600' == '113d3041-0cd...-22cb857db875'\nE         \nE         - 113d3041-0cd5-48ec-b046-22cb857db875\nE         + 977cc958-caec-43e7-aa06-0e35d08a7600\n\ntests/endpoints/test_users.py:104: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733073169195,"stop":1733073169197,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733073169197,"stop":1733073169197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733073169197,"stop":1733073169198,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733073169197,"stop":1733073169197,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733073169198,"stop":1733073171608,"duration":2410},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: User ID mismatch: 977cc958-caec-43e7-aa06-0e35d08a7600\nassert '977cc958-cae...-0e35d08a7600' == '113d3041-0cd...-22cb857db875'\n  \n  - 113d3041-0cd5-48ec-b046-22cb857db875\n  + 977cc958-caec-43e7-aa06-0e35d08a7600","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f8fe18ecc20>\nx_task_value = 'api-23'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Get user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-23\"])\n    def test_get_single_user(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n        user_uuid = users.users[len(users.users) - 1].uuid\n    \n        user_response = api_client.get_user(user_uuid, x_task_value)\n        user = UserBase(**user_response.json())\n    \n>       assert user.uuid == user_uuid, f\"User ID mismatch: {user.uuid}\"\nE       AssertionError: User ID mismatch: 977cc958-caec-43e7-aa06-0e35d08a7600\nE       assert '977cc958-cae...-0e35d08a7600' == '113d3041-0cd...-22cb857db875'\nE         \nE         - 113d3041-0cd5-48ec-b046-22cb857db875\nE         + 977cc958-caec-43e7-aa06-0e35d08a7600\n\ntests/endpoints/test_users.py:104: AssertionError","steps":[],"attachments":[{"uid":"3b05f2672753c4d4","name":"log","source":"3b05f2672753c4d4.txt","type":"text/plain","size":1987},{"uid":"ee216eebbb8670e0","name":"stderr","source":"ee216eebbb8670e0.txt","type":"text/plain","size":1977}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733073188984,"stop":1733073188984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Get user"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az1542-804"},{"name":"thread","value":"2331-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-23'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ea798fcd96e77bd9.json","parameterValues":["'api-23'"]}