{"uid":"e42e218b4a487090","name":"test_delete_nonexisting_user[api-1]","fullName":"tests.endpoints.test_users#test_delete_nonexisting_user","historyId":"edcfebb27bc6f450f3e552c0b09cb057","time":{"start":1733075768737,"stop":1733075769577,"duration":840},"status":"failed","statusMessage":"AssertionError: Incorrect response code: 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f26331f8ce0>\nx_task_value = 'api-1'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Delete user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-1\"])\n    def test_delete_nonexisting_user(api_client, x_task_value):\n        response = api_client.delete_user(f.uuid4(), x_task_value)\n    \n>       assert response.status_code == 404, f\"Incorrect response code: {response.status_code}\"\nE       AssertionError: Incorrect response code: 500\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\ntests/endpoints/test_users.py:52: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733075761684,"stop":1733075761687,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733075761687,"stop":1733075761687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733075761687,"stop":1733075761687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733075761687,"stop":1733075761687,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733075761687,"stop":1733075764298,"duration":2611},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Incorrect response code: 500\nassert 500 == 404\n +  where 500 = <Response [500]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7f26331f8ce0>\nx_task_value = 'api-1'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Delete user\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-1\"])\n    def test_delete_nonexisting_user(api_client, x_task_value):\n        response = api_client.delete_user(f.uuid4(), x_task_value)\n    \n>       assert response.status_code == 404, f\"Incorrect response code: {response.status_code}\"\nE       AssertionError: Incorrect response code: 500\nE       assert 500 == 404\nE        +  where 500 = <Response [500]>.status_code\n\ntests/endpoints/test_users.py:52: AssertionError","steps":[],"attachments":[{"uid":"d561c0fa7f0d12cc","name":"log","source":"d561c0fa7f0d12cc.txt","type":"text/plain","size":357},{"uid":"8a0af57c3d1a5c82","name":"stderr","source":"8a0af57c3d1a5c82.txt","type":"text/plain","size":353}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733075783714,"stop":1733075783714,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Delete user"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az1110-191"},{"name":"thread","value":"2423-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-1'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e42e218b4a487090.json","parameterValues":["'api-1'"]}