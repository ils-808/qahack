{"uid":"e75a6b891dfc7edc","name":"test_update_userpwd_and_login[api-24]","fullName":"tests.endpoints.test_users#test_update_userpwd_and_login","historyId":"97b1ed844692423ef903ef178eb9d9c5","time":{"start":1733074819236,"stop":1733074822000,"duration":2764},"status":"failed","statusMessage":"AssertionError: Unable login with new credentials, status code: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7fb2beef8b60>\nx_task_value = 'api-24'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Update user password\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-24\"])\n    def test_update_userpwd_and_login(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n    \n        new_pass = f.password()\n        dto = UserBase(email=users.users[0].email, password=new_pass, name=f.name(), nickname=users.users[0].nickname)\n        dto.model_dump(exclude_none=True)\n        api_client.patch_user(dto, users.users[0].uuid, x_task_value)\n    \n        response = api_client.auth_user(dto, x_task_value)\n    \n>       assert response.status_code == 200, f\"Unable login with new credentials, status code: {response.status_code}\"\nE       AssertionError: Unable login with new credentials, status code: 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/endpoints/test_users.py:121: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733074804981,"stop":1733074804983,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup_test","time":{"start":1733074804983,"stop":1733074807695,"duration":2712},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"api_client","time":{"start":1733074804983,"stop":1733074804983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1733074804983,"stop":1733074804983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"base_url","time":{"start":1733074804983,"stop":1733074804983,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Unable login with new credentials, status code: 404\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"api_client = <api_handler.ApiClient.ApiClient object at 0x7fb2beef8b60>\nx_task_value = 'api-24'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Update user password\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-24\"])\n    def test_update_userpwd_and_login(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n        users = Users(**users_response.json())\n    \n        new_pass = f.password()\n        dto = UserBase(email=users.users[0].email, password=new_pass, name=f.name(), nickname=users.users[0].nickname)\n        dto.model_dump(exclude_none=True)\n        api_client.patch_user(dto, users.users[0].uuid, x_task_value)\n    \n        response = api_client.auth_user(dto, x_task_value)\n    \n>       assert response.status_code == 200, f\"Unable login with new credentials, status code: {response.status_code}\"\nE       AssertionError: Unable login with new credentials, status code: 404\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/endpoints/test_users.py:121: AssertionError","steps":[],"attachments":[{"uid":"dee33768ac5a1bd9","name":"log","source":"dee33768ac5a1bd9.txt","type":"text/plain","size":2360},{"uid":"97bb219e65e6dc","name":"stderr","source":"97bb219e65e6dc.txt","type":"text/plain","size":2344}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup_test::0","time":{"start":1733074828101,"stop":1733074828101,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Update user password"},{"name":"feature","value":"User API"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az1205-27"},{"name":"thread","value":"2394-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-24'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"e75a6b891dfc7edc.json","parameterValues":["'api-24'"]}