{"uid":"3ba5f7f1d1876495","name":"test_flush_cart[api-15]","fullName":"tests.endpoints.test_cart#test_flush_cart","historyId":"0450d432147036d633d76dbb6001e87f","time":{"start":1733146067150,"stop":1733146070401,"duration":3251},"status":"failed","statusMessage":"AssertionError: Cart flush failed. Cart not empty: 77301ed2-d24f-4a73-9a64-180d1b88eed7\nassert not [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)]\n +  where [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)] = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=5999, user_uuid='77301ed2-d24f-4a73-9a64-180d1b88eed7').items","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7fd4c9a8cfb0>\nx_task_value = 'api-15'\n\n    @allure.feature(\"Cart API\")\n    @allure.story(\"Flush users cart\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-15\"])\n    def test_flush_cart(api_client, x_task_value):\n        games = api_client.get_games(x_task_value)\n        games_dto = GamesResponse(**games.json())\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n    \n        cart_item = Cart(item_uuid=games_dto.games[0].uuid, quantity=1)\n        api_client.add_to_cart(user_uuid, cart_item, x_task_value)\n    \n        response = api_client.clear_user_cart(user_uuid, x_task_value)\n        order_dto = CartResponse(**response.json())\n>       assert not order_dto.items, f\"Cart flush failed. Cart not empty: {order_dto.user_uuid}\"\nE       AssertionError: Cart flush failed. Cart not empty: 77301ed2-d24f-4a73-9a64-180d1b88eed7\nE       assert not [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)]\nE        +  where [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)] = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=5999, user_uuid='77301ed2-d24f-4a73-9a64-180d1b88eed7').items\n\ntests/endpoints/test_cart.py:67: AssertionError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733146055504,"stop":1733146055505,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733146055505,"stop":1733146055506,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1733146055506,"stop":1733146055506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733146055506,"stop":1733146055506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test","time":{"start":1733146055506,"stop":1733146058069,"duration":2563},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Cart flush failed. Cart not empty: 77301ed2-d24f-4a73-9a64-180d1b88eed7\nassert not [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)]\n +  where [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)] = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=5999, user_uuid='77301ed2-d24f-4a73-9a64-180d1b88eed7').items","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7fd4c9a8cfb0>\nx_task_value = 'api-15'\n\n    @allure.feature(\"Cart API\")\n    @allure.story(\"Flush users cart\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-15\"])\n    def test_flush_cart(api_client, x_task_value):\n        games = api_client.get_games(x_task_value)\n        games_dto = GamesResponse(**games.json())\n        users_response = api_client.get_users(x_task_value, 0)\n        users_dto = Users(**users_response.json())\n    \n        user_uuid = users_dto.users[0].uuid\n    \n        cart_item = Cart(item_uuid=games_dto.games[0].uuid, quantity=1)\n        api_client.add_to_cart(user_uuid, cart_item, x_task_value)\n    \n        response = api_client.clear_user_cart(user_uuid, x_task_value)\n        order_dto = CartResponse(**response.json())\n>       assert not order_dto.items, f\"Cart flush failed. Cart not empty: {order_dto.user_uuid}\"\nE       AssertionError: Cart flush failed. Cart not empty: 77301ed2-d24f-4a73-9a64-180d1b88eed7\nE       assert not [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)]\nE        +  where [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)] = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=5999, user_uuid='77301ed2-d24f-4a73-9a64-180d1b88eed7').items\n\ntests/endpoints/test_cart.py:67: AssertionError","steps":[],"attachments":[{"uid":"f335e11adc847b48","name":"log","source":"f335e11adc847b48.txt","type":"text/plain","size":4344},{"uid":"162a4b8472e3e3ad","name":"stderr","source":"162a4b8472e3e3ad.txt","type":"text/plain","size":4316}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test::0","time":{"start":1733146074113,"stop":1733146074113,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Cart API"},{"name":"story","value":"Flush users cart"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_cart"},{"name":"host","value":"fv-az1272-97"},{"name":"thread","value":"2889-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_cart"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-15'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":7},"items":[{"uid":"257d7f8f6c4b4498","reportUrl":"https://ils-808.github.io/qahack/99//#testresult/257d7f8f6c4b4498","status":"broken","statusDetails":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for GamesResponse\ngames\n  Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.9/v/missing\nmeta\n  Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.9/v/missing","time":{"start":1733145943270,"stop":1733145944266,"duration":996}},{"uid":"676c2ed24c1e151c","reportUrl":"https://ils-808.github.io/qahack/98//#testresult/676c2ed24c1e151c","status":"passed","time":{"start":1733145786505,"stop":1733145789235,"duration":2730}},{"uid":"4a890c70ebf1a5bb","reportUrl":"https://ils-808.github.io/qahack/63//#testresult/4a890c70ebf1a5bb","status":"passed","time":{"start":1733086113239,"stop":1733086116120,"duration":2881}},{"uid":"46479c9044a1eb19","reportUrl":"https://ils-808.github.io/qahack/62//#testresult/46479c9044a1eb19","status":"failed","statusDetails":"AssertionError: Cart flush failed. Cart not empty: 6275c091-253f-4780-ab5f-e8f9c23ce8f4\nassert not [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)]\n +  where [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)] = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=5999, user_uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4').items","time":{"start":1733084993708,"stop":1733084996517,"duration":2809}},{"uid":"3d1638c74fdc0d90","reportUrl":"https://ils-808.github.io/qahack/61//#testresult/3d1638c74fdc0d90","status":"failed","statusDetails":"AssertionError: Cart flush failed. Cart not empty: 256995fa-7190-44fd-bc0c-bb16b5c924a1\nassert not [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)]\n +  where [ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)] = CartResponse(items=[ItemCart(item_uuid='1990ecdd-4d3d-4de2-91b9-d45d794c82bc', quantity=1, total_price=5999)], total_price=5999, user_uuid='256995fa-7190-44fd-bc0c-bb16b5c924a1').items","time":{"start":1733084771990,"stop":1733084775306,"duration":3316}},{"uid":"5df6274dbc851cb1","reportUrl":"https://ils-808.github.io/qahack/60//#testresult/5df6274dbc851cb1","status":"passed","time":{"start":1733084492259,"stop":1733084496022,"duration":3763}}]},"tags":[]},"source":"3ba5f7f1d1876495.json","parameterValues":["'api-15'"]}