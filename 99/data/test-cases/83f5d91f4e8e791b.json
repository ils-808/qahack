{"uid":"83f5d91f4e8e791b","name":"test_update_user_email_already_exist[api-4]","fullName":"tests.endpoints.test_users#test_update_user_email_already_exist","historyId":"5a42c27506029434387362f8290a40cc","time":{"start":1733145942794,"stop":1733145943816,"duration":1022},"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for Users\nusers\n  Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.9/v/missing\nmeta\n  Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.9/v/missing","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f0f690f47d0>\nx_task_value = 'api-4'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Update user partially\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-4\"])\n    def test_update_user_email_already_exist(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n>       users = Users(**users_response.json())\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for Users\nE       users\nE         Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.9/v/missing\nE       meta\nE         Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.9/v/missing\n\ntests/endpoints/test_users.py:60: ValidationError","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733145937791,"stop":1733145937793,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733145937793,"stop":1733145937793,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1733145937794,"stop":1733145937794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733145937794,"stop":1733145937794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test","time":{"start":1733145937794,"stop":1733145939703,"duration":1909},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"pydantic_core._pydantic_core.ValidationError: 2 validation errors for Users\nusers\n  Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.9/v/missing\nmeta\n  Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.9/v/missing","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f0f690f47d0>\nx_task_value = 'api-4'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"Update user partially\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-4\"])\n    def test_update_user_email_already_exist(api_client, x_task_value):\n        users_response = api_client.get_users(x_task_value, 0)\n>       users = Users(**users_response.json())\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for Users\nE       users\nE         Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.9/v/missing\nE       meta\nE         Field required [type=missing, input_value={'code': 500, 'message': 'Internal server error'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.9/v/missing\n\ntests/endpoints/test_users.py:60: ValidationError","steps":[],"attachments":[{"uid":"3a9305fec574ae4b","name":"log","source":"3a9305fec574ae4b.txt","type":"text/plain","size":319},{"uid":"4c40c3c55d94d718","name":"stderr","source":"4c40c3c55d94d718.txt","type":"text/plain","size":313}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test::0","time":{"start":1733145947967,"stop":1733145947967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"Update user partially"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az1536-526"},{"name":"thread","value":"2792-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-4'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"f70fe06e28119c7d","reportUrl":"https://ils-808.github.io/qahack/98//#testresult/f70fe06e28119c7d","status":"passed","time":{"start":1733145782594,"stop":1733145783792,"duration":1198}},{"uid":"a8ecc278e4fed18e","reportUrl":"https://ils-808.github.io/qahack/63//#testresult/a8ecc278e4fed18e","status":"passed","time":{"start":1733086109203,"stop":1733086110592,"duration":1389}},{"uid":"339cee39197caf9","reportUrl":"https://ils-808.github.io/qahack/62//#testresult/339cee39197caf9","status":"failed","statusDetails":"AssertionError: Incorrect response code: 400\nassert 400 == 409\n +  where 400 = <Response [400]>.status_code","time":{"start":1733084989657,"stop":1733084991025,"duration":1368}},{"uid":"dbc0069a4c2cb76c","reportUrl":"https://ils-808.github.io/qahack/61//#testresult/dbc0069a4c2cb76c","status":"failed","statusDetails":"AssertionError: Incorrect response code: 400\nassert 400 == 409\n +  where 400 = <Response [400]>.status_code","time":{"start":1733084768004,"stop":1733084769012,"duration":1008}},{"uid":"3b8156bd6e756b69","reportUrl":"https://ils-808.github.io/qahack/60//#testresult/3b8156bd6e756b69","status":"passed","time":{"start":1733084487859,"stop":1733084489450,"duration":1591}}]},"tags":[]},"source":"83f5d91f4e8e791b.json","parameterValues":["'api-4'"]}