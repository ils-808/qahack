{"uid":"a1fa6d12ba74f231","name":"test_create_user_nick_used[api-3]","fullName":"tests.endpoints.test_users#test_create_user_nick_used","historyId":"323c4dc35ac72476fddb254216e4925d","time":{"start":1733146276212,"stop":1733146277302,"duration":1090},"status":"failed","statusMessage":"AssertionError: Empty nickname\nassert None\n +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\n +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\n +      where {'code': 500, 'message': 'Internal server error'} = json()\n +        where json = <Response [500]>.json","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f3a819e88c0>\nx_task_value = 'api-3'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"User creation\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-3\"])\n    def test_create_user_nick_used(api_client, x_task_value):\n        dto = UserBase(email=f.email(), nickname=f.user_name(), password=f.password(), name=f.name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert UserBase(**response.json()).nickname, f\"Empty nickname\"\nE       AssertionError: Empty nickname\nE       assert None\nE        +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\nE        +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\nE        +      where {'code': 500, 'message': 'Internal server error'} = json()\nE        +        where json = <Response [500]>.json\n\ntests/endpoints/test_users.py:17: AssertionError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1733146274601,"stop":1733146274604,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1733146274604,"stop":1733146274605,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"worker_id","time":{"start":1733146274605,"stop":1733146274605,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup_test","time":{"start":1733146274605,"stop":1733146276211,"duration":1606},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1733146274605,"stop":1733146274605,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Empty nickname\nassert None\n +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\n +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\n +      where {'code': 500, 'message': 'Internal server error'} = json()\n +        where json = <Response [500]>.json","statusTrace":"api_client = <api_handler.api_client.ApiClient object at 0x7f3a819e88c0>\nx_task_value = 'api-3'\n\n    @allure.feature(\"User API\")\n    @allure.story(\"User creation\")\n    @pytest.mark.parametrize(\"x_task_value\", [\"api-3\"])\n    def test_create_user_nick_used(api_client, x_task_value):\n        dto = UserBase(email=f.email(), nickname=f.user_name(), password=f.password(), name=f.name())\n        dto.model_dump(exclude_none=True)\n        response = api_client.create_user(dto, x_task_value)\n    \n>       assert UserBase(**response.json()).nickname, f\"Empty nickname\"\nE       AssertionError: Empty nickname\nE       assert None\nE        +  where None = UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None).nickname\nE        +    where UserBase(uuid=None, nickname=None, name=None, email=None, password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url=None) = UserBase(**{'code': 500, 'message': 'Internal server error'})\nE        +      where {'code': 500, 'message': 'Internal server error'} = json()\nE        +        where json = <Response [500]>.json\n\ntests/endpoints/test_users.py:17: AssertionError","steps":[],"attachments":[{"uid":"2c484938ff2ae94c","name":"log","source":"2c484938ff2ae94c.txt","type":"text/plain","size":318},{"uid":"1f7663d1bc73d4b2","name":"stderr","source":"1f7663d1bc73d4b2.txt","type":"text/plain","size":314}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup_test::0","time":{"start":1733146285804,"stop":1733146285804,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"User API"},{"name":"story","value":"User creation"},{"name":"parentSuite","value":"tests.endpoints"},{"name":"suite","value":"test_users"},{"name":"host","value":"fv-az888-715"},{"name":"thread","value":"2796-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.endpoints.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"x_task_value","value":"'api-3'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":3,"unknown":0,"total":8},"items":[{"uid":"9ea48aeb78556367","reportUrl":"https://ils-808.github.io/qahack/100//#testresult/9ea48aeb78556367","status":"failed","statusDetails":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='77301ed2-d24f-4a73-9a64-180d1b88eed7', nickname='', name='Lori Calderon', email='david54@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='77301ed2-d24f-4a73-9a64-180d1b88eed7', nickname='', name='Lori Calderon', email='david54@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'david54@example.org', 'name': 'Lori Calderon', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'david54@example.org', 'name': 'Lori Calderon', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","time":{"start":1733146058070,"stop":1733146059105,"duration":1035}},{"uid":"dfd8a8f782896a0d","reportUrl":"https://ils-808.github.io/qahack/99//#testresult/dfd8a8f782896a0d","status":"failed","statusDetails":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='eb3f2338-3f64-4285-b393-0809434e3b24', nickname='', name='Susan Ramos', email='tracy01@example.net', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='eb3f2338-3f64-4285-b393-0809434e3b24', nickname='', name='Susan Ramos', email='tracy01@example.net', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'tracy01@example.net', 'name': 'Susan Ramos', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'tracy01@example.net', 'name': 'Susan Ramos', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","time":{"start":1733145939704,"stop":1733145940597,"duration":893}},{"uid":"b96370b2683d6d89","reportUrl":"https://ils-808.github.io/qahack/98//#testresult/b96370b2683d6d89","status":"passed","time":{"start":1733145778709,"stop":1733145779548,"duration":839}},{"uid":"5b4d6704bf26ddcf","reportUrl":"https://ils-808.github.io/qahack/63//#testresult/5b4d6704bf26ddcf","status":"passed","time":{"start":1733086105177,"stop":1733086106068,"duration":891}},{"uid":"26488a9f2fe539d9","reportUrl":"https://ils-808.github.io/qahack/62//#testresult/26488a9f2fe539d9","status":"failed","statusDetails":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='6275c091-253f-4780-ab5f-e8f9c23ce8f4', nickname='', name='Brandy Rivera', email='cameronruiz@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'cameronruiz@example.org', 'name': 'Brandy Rivera', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","time":{"start":1733084985488,"stop":1733084986366,"duration":878}},{"uid":"6421c4ad4ace7fc2","reportUrl":"https://ils-808.github.io/qahack/61//#testresult/6421c4ad4ace7fc2","status":"failed","statusDetails":"AssertionError: Empty nickname\nassert ''\n +  where '' = UserBase(uuid='256995fa-7190-44fd-bc0c-bb16b5c924a1', nickname='', name='Laura Medina', email='millerjeremy@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='').nickname\n +    where UserBase(uuid='256995fa-7190-44fd-bc0c-bb16b5c924a1', nickname='', name='Laura Medina', email='millerjeremy@example.org', password='\"HA\"R\"HA\"R', phone=None, userStatus=None, avatar_url='') = UserBase(**{'avatar_url': '', 'email': 'millerjeremy@example.org', 'name': 'Laura Medina', 'nickname': '', ...})\n +      where {'avatar_url': '', 'email': 'millerjeremy@example.org', 'name': 'Laura Medina', 'nickname': '', ...} = json()\n +        where json = <Response [200]>.json","time":{"start":1733084764349,"stop":1733084765149,"duration":800}},{"uid":"5fb53d55b20fbdc4","reportUrl":"https://ils-808.github.io/qahack/60//#testresult/5fb53d55b20fbdc4","status":"passed","time":{"start":1733084482382,"stop":1733084483551,"duration":1169}}]},"tags":[]},"source":"a1fa6d12ba74f231.json","parameterValues":["'api-3'"]}